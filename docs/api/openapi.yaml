openapi: '3.0.2'
info:
  title: 'File upload'
  version: '1.0.0'
  description: |
    Application for calculating the file sha1 hash and the file size
    # Error codes

    ### Description of codes for `422 Unprocessable entity` responses

    | Code | Description |
    |---|---|
    | U4000 | User already exists. |
    | U4001 | Invalid password. Password must contain minimum eight characters, must have at least one uppercase letter, one lowercase letter, at least one number and no special character. |

servers:
  - url: '/'

paths:
  /:
    get:
      operationId: greetingFromServer
      summary: Testing endpoint
      tags:
        - App
      responses:
        '200':
          description: ok
          content:
            text/plain:
              schema:
                type: string
                enum: ['Hello']
  /api/v1/sessions:
    post:
      operationId: createSession
      summary: Login user and obtain a JWT token
      tags:
        - Sessions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                      example: john@doe.com
                    passwd:
                      type: string
                      example: myPassword
                  required: ['name', 'passwd']
              required: ['user']
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 'caeb2a6a-bd1d-41cc-bfdf-5d4514ace591'
                required: ['token']
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/NotAuthenticatedErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
  /api/v1/users:
    post:
      operationId: createUser
      summary: Create a new user
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                      example: 'john@doe.com'
                    passwd:
                      type: string
                      example: 'myPassword'
                  required: ['name', 'passwd']
              required: ['user']
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 'caeb2a6a-bd1d-41cc-bfdf-5d4514ace591'
                required: ['token']
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '422':
          description: Invalid data
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/U4000'
                  - $ref: '#/components/schemas/U4001'
  /api/v1/uploads:
    post:
      security:
        - bearer: []
      operationId: uploadFile
      summary: Upload file, get the size of the file and sha1 hash the file
      tags:
        - Files
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                files:
                  oneOf:
                    - type: array
                      items:
                        type: string
                        format: binary
                    - type: string
                      format: binary
              required:
                - files
            encoding:
              files:
                contentType: application/pdf
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    file:
                      type: object
                      properties:
                        sha1Hash:
                          type: string
                          example: adsfjas0f93ja3w0f9ajw3fjafasdfasd0f9j32fa09sjf
                        sizeInBytes:
                          type: string
                          example: 1009239
                        name:
                          type: string
                          example: myBestFile.txt
                      required: ['sha1Hash', 'name']
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/NotAuthenticatedErrorResponse'
components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    HttpError:
      type: object
      properties:
        message:
          type: string
        status:
          type: number
        errorCode:
          type: string
        errorData:
          type: object
          properties:
            message:
              type: string
            code:
              type: string
        errorClass:
          type: string
        stack:
          type: string
    U4000:
      type: object
      properties:
        code:
          type: string
          example: U4000
    U4001:
      type: object
      properties:
        code:
          type: string
          example: U4001
  responses:
    UnauthorizedErrorResponse:
      description: Unauthorized access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpError'
    NotAuthenticatedErrorResponse:
      description: Unauthenticated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpError'
    BadRequestErrorResponse:
      description: 'Request not processed - bad_request'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpError'
    NotFoundErrorResponse:
      description: 'Entity not found - not_found'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpError'
